@use "config" as config;
@use "mixins" as mixins;

@font-face {
  font-family: "English";
  src: url("../assets/fonts/En/OpenSans-Regular.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "EnglishLight";
  src: url("../assets/fonts/En/OpenSans-Light.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "EnglishMed";
  src: url("../assets/fonts/En/OpenSans-Medium.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "EnglishBold";
  src: url("../assets/fonts/En/OpenSans-Bold.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "Farsi";
  src: url("../assets/fonts/Fa/IranSans-Regular.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "FarsiLight";
  src: url("../assets/fonts/Fa/IranSans-Light.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "FarsiMed";
  src: url("../assets/fonts/Fa/IranSans-Medium.ttf") format("truetype");
  font-weight: bold;
}
@font-face {
  font-family: "FarsiBold";
  src: url("../assets/fonts/Fa/IranSans-Bold.ttf") format("truetype");
  font-weight: bold;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-weight: 300;
  line-height: 30px;
}

body {
  user-select: none;
  background: config.$white;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  @include mixins.button(config.$green, config.$brand);
}

h1 {
  font-size: 2.5rem;
  @include mixins.mobile {
    font-size: 1.8rem;
  }
}

h2 {
  font-size: 2rem;
  @include mixins.mobile {
    font-size: 1.7rem;
  }
}

h3 {
  font-size: 1.5rem;
  @include mixins.mobile {
    font-size: 1.3rem;
  }
}

p {
  font-size: 1rem;
}

.menu {
  position: fixed;
  top: 0px;
  z-index: 10;
  height: 120px;
  width: 100%;
  @include mixins.transparentBackground(0.7, config.$green);
  @include mixins.row-space-between-center();
  justify-content: center;
}

.footer {
  position: fixed;
  bottom: 0px;
  z-index: 10;
  height: 50px;
  width: 100%;
  @include mixins.transparentBackground(0.7, config.$green);
  @include mixins.row-space-between-center();
}

.icon {
  cursor: pointer;
}

.appload {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  background: config.$green;
  height: 100vh;
  h1 {
    position: relative;
    right: 8px;
    bottom: 200px;
    color: config.$brand;
    letter-spacing: 28px;

    @include mixins.mobile {
      letter-spacing: 16px;
    }
  }
}

// input file
label.file input[type="file"] {
  position: absolute;
  top: -1000px;
}
.file {
  display: flex;
  justify-content: center;
  align-items: center;
  color: config.$grey;
  background: config.$white;
  height: 50px;
  border-radius: 4px;
  border: 1px solid config.$grey;
  cursor: pointer;
}
.file:hover {
  color: config.$brand;
  border: 1px solid config.$brand;
}

.works_swiper__tLvOM {
  .swiper-slide {
    opacity: 0.5;
  }
  .swiper-slide-active {
    opacity: 1;
  }
}

.swiper-button-prev {
  color: config.$brand !important;
  scale: 0.5;
}
.swiper-button-next {
  color: config.$brand !important;
  scale: 0.5;
}
